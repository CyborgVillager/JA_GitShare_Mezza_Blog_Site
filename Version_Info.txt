                Key Legend:
                -- = current version
                -wor: = working on this ver
                 <-x_x-> = bug
                 |x_x| = bug fixed
                 <-o_o-> = design issue
                 |o_o| = design issue fixed


                     ~Updating to repo~
               | --------------------------- |
               | v# : Short Version Title    |
               | Description: v# description |
               | --------------------------- |

v0 : Introduction of the project and the main intent of it
v1: Setup Mezzanine, created login/setup basic db, will work further on the admin side
v2: Added 'About Us Page' & a custom post to test out a couple of features of using Mezzanine
v3: Updated mezzanine_pyvenv / placed in corrected format
----------------------------    ----------------------------   ------------------------- ------------------------------
v4: Collected the templates from Mezzanine to be used as temp drafts for future testing/improvements for the site.
command to do this (while in my_project dir) -> python manage.py collecttemplates -> rename to tempdrafts

    * In order to 'move' a file such as form.html you have to copy the whole folder. e.g to aquire form.html copy
pages(tempdrafts) into your templates folder (theme/templates). This is due to referencing the data tree.

    * As of now I've just copied base.html from tempdrafts and paste into onto templates. Since base.html didn't have
    a main folder for reference you'll be okay.

    * Ensure on my_project/settings.py line #202 or known as  os.path.join(PROJECT_ROOT, "templates"), has 'templates'
    to allow proper data to be transfered to the site. Thanks in part to stackoverflow for assistance ->
    https://stackoverflow.com/questions/41519534/static-files-not-found-in-mezzanine

    * line 65 - 67 on editing the search feature @ templates/base.html ->
    <div class="navbar-collapse collapse">
    {% search_form "blog.BlogPost" %} or 'pages.Page' to either only search for blog posts, pages, etc. As of now
    its default to search for all to give the user the option to choose the info that they desired
    Link to further learn: http://mezzanine.jupo.org/docs/search-engine.html
----------------------------   ----------------------------   ---------------------------- ----------------------------
v5 <-o_o->:  When working on aquiring info from theme/static ensure you follow this format ->
                {% static 'folder/folder/info/info' %}
               Aquired the template from : https://startbootstrap.com/themes/clean-blog/ and impletemented some of its
                features onto the site for a 'clean look'

v6 <-o_o->: Worked further on improving the site design from v5, updated the nav bar to auto aquire the info, included
                tempdrafts/pages/menus into templates for better menu design.

v7 <-o_o->: Removed a breadcrumb menu, removed empty boxes to the right of the screen, that holds no data.
                Cleaned the code of any info that is not being used. Will include if any new functions are needed for
                the site. As of now the essentials are being built.
                * on templates\index.html to aquire image follow this format :
                  <header class="masthead" style="background-image: url('{{STATIC_URL}}img/home-bg.jpg')">

v8 |o_o|:    Fixed Navigation / Design issue -> updated  {% page_menu "pages/menus/dropdown.html" %} to
                primary.html @ <div class="collapse navbar-collapse" id="navbarResponsive"> line # 71-72

                Activated Blog feature of Mezzanine /my_project/urls.py -> url("^$", blog_views.blog_post_list,
                name="home"), while commenting out url("^$", mezzanine.pages.views.page, {"slug": "/"}, name="home"),
                see urls.py for more information in regards to a BLOG-ONLY SITE vs HOMEPAGE AS STATIC TEMPLATE
                or check the documentation @ http://mezzanine.jupo.org/docs/configuration.html

                uncomment -> from mezzanine.blog import views as blog_views @ urls.py , include BLOG_SLUG = '' @
                settings.py under CUSTOM SETTINGS

                to make a 'home page' import this into urls.py -> from mezzanine.pages.views import page
                comment  from mezzanine.blog import views as blog_views and un-comment
                url("^$", page, {"slug": "/"}, name="home"),

                Its orignally was mezzanine.pages.views.page. If you keep it as it is, an error will occur. So only
                delete mezzanine.pages.views. so it will be page,

                To aquire more info check mezzanine @ mezzanine_pyvenv/mezzanine/pages/views.py

----------------------------   ----------------------------   ---------------------------- ----------------------------
v9:           For now Ill just use url("^$", direct_to_template, {"template": "index.html"}, name="home"),
                    and comment out the rest. including from mezzanine.pages.views import page
                    Will check on the other options after finish with this test project
v10: Disabled Blog_Slug in settings. So now the web page will show tabs such as /about only /about/ instead of
        /pages/about

v10.5:     -Edit: Updated base.html - included a link to the github from the github icon, if a user clicks on it
                It will take them to the github respo

v11:   Updated pageheader and main blocks @ base.html & index.html -> moved from index.html to base.html
            to contain the rows & have a container for About.page/organized the index a bit

v12: page.html used for admin use copied to templates/pages/page.html -> can be aquired from tempdrafts which can
            be found @ mezzanine_pyvenv -Lib-site-packages->mezzanine-pages-templates-pages
            {{ request.path }}-give current url of the page the user is on at the moment
            if this path = /page_name/ show this content. example /about/

v13: Any new pages will go through my_project/theme/templates/pages/page.html in which will be directed to
        <!--Page Header--> Check at lines 22-41 -update the 'check @
        lines 22-41' if the code increase/decrease in size
----------------------------   ----------------------------   ---------------------------- ----------------------------
v14: Modified hr (line 89) from index.html to base.html comments from index.html -> Have some ideas on
        using this feature for other use, for now it will be here, until needed, for now it will
        be @ base.html line 84-update as needed comments from base.html -> This came from index.html line 89,
        will check on this later for other use/display

v15: http://mezzanine.jupo.org/docs/configuration.html -> CTRL - F -> FORMS_USE_HTML5 for more information , as of
            now its set to False. Make it True @ settings.py under CUSTOM SETTINGS line 347

            original place password @ activate - last line -> export EMAIL_HOST_PASSWORD="password". However for now
            it will be at settings.py as EMAIL_HOST_PASSWORD = 'password' -> not 'secure'. However for the time being
            this will do. Will work on improving the security aspect in-depth in a later session.

            You have to allow less secuire apps by going on this link from google
            https://myaccount.google.com/u/2/lesssecureapps?pageId=none <- takes you directly to it
            https://support.google.com/accounts/answer/6010255?hl=en <- main page

            Contact needs to be worked on as well- will not receive a notification for the moment.
----------------------------   ----------------------------   ---------------------------- ----------------------------
v16: form.html is connected @ /form_fields.html
            Made 'required' hidden untill user has entered the information with no data,
            Fixed Content page displays, required is hidden.
            The css for the displays can be found @ theme/static/css/custom.css

            Transfered  <div class="col-lg-8 col-md-10 mx-auto"> from index.html to base.html -> can be found @
            line 81 to ensure block main will be affected

v17:  Aquired data from page.html -> Page Header and moved it to base.html to allow home page to show
        To see other page categories go to page.html

v18:   Django template filters if you would like to further customize the site -> to cuystomize the filter
            https://docs.djangoproject.com/en/3.0/ref/templates/builtins/

            Allowed the post to have a 'time' on when it was posted on blog_post_list.html line 94-95.
            for more info on timesince https://docs.djangoproject.com/en/3.0/ref/templates/builtins/
                CTRL-F->timesince
                removed timesince and ago location -> {{sometime }} ago {% endblocktrans %}

            After that started to truncate words or in this case chars -> truncatewords can be found at the link
            https://docs.djangoproject.com/en/3.0/ref/templates/builtins/ -> CTRL-F->truncatewords
            Shorten the blog post para's to 60 words per post on the front page. Once a user has click on the post
            they can see the whole post info

            Added 'Read More' with comments -> more info can be found @ templates/blog/blog_post_list.html @ line 97
----------------------------   ----------------------------   ---------------------------- ----------------------------
v19: Aquired blog_post_detail.html from tempdrafts and placed it on templates/blog & copied base.html home img
            to user blog @ blog_post.detail.html @ line 24-38

v20: Updated user's blog title to their custom title for the blog instead of 'Clean Blog' @ blog_post.detail.html
            line 31  Also updated the css to show which post was created by whom with time @ custom.css

v21: Comments can be found @ tempdrafts-generic-comments.html, disabled ratings during the comments & after commenting
            can be re-activated @ settings.py. User-commented post is comment.html, before commenting to make a comment
            is called comments.html
--:v22: Fixed some small issues, now you can edit a post/info on the same location instead of having to go to your
        post lists to edit it, besides that the site is pretty much finished. Will continue to work on it and improve
        the later versions @ a later date. For now will learn a bit more about python/tkinter gui. Going to use
        this new knowledge to make more user-friendly programs without the need to do steps 1,2,3,4,5 to start the program
        it will be either a step 1-2 process to start the program with a gui to help aid in visual aspects of it.

        Besides that feel free to play around this the code, and learn something for your self as well. Lets increase
        the world's knowledge of code together.

        Anyhow have a great day/night
        
        ~Jonathan Almawi
            A.K.A CyborgVillager
-wor:v23:
v24:
v25:
v26:
v27:
